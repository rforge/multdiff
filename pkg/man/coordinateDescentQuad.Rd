% Generated by roxygen2 (4.0.1): do not edit by hand
\name{coordinateDescentQuad}
\alias{coordinateDescentQuad}
\title{l1-penalized coordinate descent}
\usage{
coordinateDescentQuad(f, gr, quad, p, beta, lambda = NULL, nlambda = 50,
  lambda.min.ratio = 0.001, penalty.factor = rep(1, p), rho = 0.9,
  c = 1e-04, reltol = sqrt(.Machine$double.eps), trace = 0)
}
\arguments{
\item{f}{a \code{function}. The loss function. A function of \code{beta}.}

\item{gr}{a \code{function}. The gradient of the loss. A function of \code{beta}.}

\item{quad}{a \code{function}. The coordinate wise quadratic approximation term.
A function of the coordinate index and \code{beta}.}

\item{p}{a \code{numeric}. The length of the parameter vector.}

\item{beta}{a \code{numeric}. The vector of initial parameter values. If \code{p} is missing
\code{beta} must be specified. When \code{p} is specified, the
value of the \code{beta} argument is ignored, and \code{beta = rep(0, p)}.}

\item{lambda}{a \code{numeric}. A sequence of penalties. The default value \code{NULL}
implies an automatic computation of a suitable sequence.}

\item{nlambda}{a \code{numeric}. The number of lambda values.}

\item{lambda.min.ratio}{a \code{numeric}. Determines the smallest value of lambda relative to the largest
(automatically) determined value of lambda.}

\item{penalty.factor}{a \code{numeric}. A vector of penalty weight factors.}

\item{rho}{a \code{numeric}. Step length control in the backtracking.}

\item{c}{a \code{numeric}. Sufficient decrease control in the backtracking.}

\item{reltol}{a \code{numeric}. Controls the convergence criterion.}

\item{trace}{a \code{numeric}. Values above 0 prints increasing amounts of trace information.}
}
\value{
A \code{list} of length 2. The first entry is the sequence \code{lambda}, and the second, \code{beta}, is the
        matrix of parameter estimates. Each column in \code{beta} corresponds to an entry in \code{lambda}.
}
\description{
Optimizes an l1-penalized loss using a coordinate wise descent algorithm.
}
\details{
The function computes a matrix of optimal parameter values. Each column corresponds to a
value of the penalty parameter in \code{lambda}. The estimates are computed in decreasing order
of the penalty parameters, and for each column the previous is used as a warm start.

The algorithm relies on iterative optimization of an l1-penalized
quadratic approximation of the loss using a standard coordinate wise descent algorithm.
A coordinate wise backtracking step is added to ensure that the algorithm takes descent steps.

This function relies on three auxiliary functions. The loss function \code{f}, its gradient \code{gr}
and a third function, \code{quad}, that computes the coefficient of the quadratic approximation
for the coordinate wise optimization.

The function returns a list with the vector of lambda values as the first entry
and the estimated beta parameters as a matrix in the second entry. Each column
in the matrix corresponds to one lambda value.
}
\author{
Niels Richard Hansen \email{Niels.R.Hansen@math.ku.dk}
}
\seealso{
\code{\link{coordinateDescent}}.
}

